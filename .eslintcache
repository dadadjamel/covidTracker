[{"D:\\Documents\\programming\\reactCovid\\corona-tracker\\src\\index.js":"1","D:\\Documents\\programming\\reactCovid\\corona-tracker\\src\\reportWebVitals.js":"2","D:\\Documents\\programming\\reactCovid\\corona-tracker\\src\\App.js":"3","D:\\Documents\\programming\\reactCovid\\corona-tracker\\src\\InfoBox.jsx":"4","D:\\Documents\\programming\\reactCovid\\corona-tracker\\src\\LineGraph.js":"5","D:\\Documents\\programming\\reactCovid\\corona-tracker\\src\\Map.js":"6","D:\\Documents\\programming\\reactCovid\\corona-tracker\\src\\Table.js":"7","D:\\Documents\\programming\\reactCovid\\corona-tracker\\src\\utils.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":3821,"mtime":1607547596400,"results":"12","hashOfConfig":"10"},{"size":718,"mtime":1596076958024,"results":"13","hashOfConfig":"10"},{"size":2506,"mtime":1596075598148,"results":"14","hashOfConfig":"10"},{"size":1312,"mtime":1607546691266,"results":"15","hashOfConfig":"10"},{"size":464,"mtime":1595865037766,"results":"16","hashOfConfig":"10"},{"size":1932,"mtime":1607542841351,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1xwfe4q",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documents\\programming\\reactCovid\\corona-tracker\\src\\index.js",[],["38","39"],"D:\\Documents\\programming\\reactCovid\\corona-tracker\\src\\reportWebVitals.js",[],"D:\\Documents\\programming\\reactCovid\\corona-tracker\\src\\App.js",[],"D:\\Documents\\programming\\reactCovid\\corona-tracker\\src\\InfoBox.jsx",["40"],"import React, { Component } from 'react';\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\"\r\nimport './infobox.css'\r\n\r\nconst InfoBox = ({ title,active,isred, cases, total,...props }) => {\r\n    return (\r\n        <Card onClick={props.onClick} className={`infobox ${active && \"infobox__selected\"} ${isred && \"infobox--red\"}`} >\r\n            <CardContent>\r\n                <Typography className=\"infobox__title\" color='textSecondary'>{title}</Typography>\r\n                <h2 className=\"infobox__cases\">+{cases}</h2>\r\n                <Typography className=\"infobox__total\" color=\"textSecondary\" >{total} Total</Typography>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default InfoBox;","D:\\Documents\\programming\\reactCovid\\corona-tracker\\src\\LineGraph.js",["41"],"import React, { Component, useEffect, useState } from 'react';\r\nimport { Line } from \"react-chartjs-2\"\r\nimport numeral from 'numeral'\r\n\r\nconst options = {\r\n    legend: { display: false },\r\n    elements: { point: { radius: 0 } },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\")\r\n            },\r\n        },\r\n    },\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time: {\r\n                    format: \"MM/DD/YY\",\r\n                    tooltipFormat: 'll'\r\n                },\r\n            },\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false\r\n                },\r\n                ticks: {\r\n\r\n                    callback: function (value, index, values) {\r\n                        return numeral(value).format(\"0a\")\r\n                    },\r\n\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\n\r\nconst buildChartData = (data, casestype='cases') => {\r\n\r\n    const chartData = []\r\n    let lastDataPoint;\r\n\r\n    for (let date in data.cases) {\r\n        if (lastDataPoint) {\r\n            const newDataPoint = {\r\n                x: date,\r\n                y: data[casestype][date] - lastDataPoint\r\n            }\r\n            chartData.push(newDataPoint)\r\n        }\r\n        lastDataPoint = data[casestype][date]\r\n    };\r\n\r\n    return chartData\r\n}\r\n\r\n\r\n\r\nconst LineGraph = ({casesType='cases'}) => {\r\n    // https://disease.sh/v3/covid-19/historical/all?lastdays=120\r\n    const [data, setdata] = useState([])\r\n\r\n    \r\n    useEffect(() => {\r\n        const fetchdata = async () => {\r\n            await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    const chartdata = buildChartData(data, casesType)\r\n                    setdata(chartdata)\r\n                    console.log(chartdata)\r\n                })\r\n        }\r\n\r\n        fetchdata()\r\n\r\n    }, [casesType])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {data?.length > 0 && (\r\n                <Line options={options} data={{\r\n                    datasets: [{ borderColor: '#cc1034', backgroundColor: 'rgba(204,16,52,0.5)', data: data }]\r\n                }} />\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LineGraph;","D:\\Documents\\programming\\reactCovid\\corona-tracker\\src\\Map.js",["42","43","44"],"D:\\Documents\\programming\\reactCovid\\corona-tracker\\src\\Table.js",["45"],"import React, { Component } from 'react';\r\nimport './table.css'\r\n\r\nconst Table = ({ countries }) => {\r\n    return (\r\n        <div className='table' >\r\n            {\r\n                countries.map(({ country, cases }) => (\r\n                    <tr>\r\n                        <td>{country}</td>\r\n                        <td><strong>{cases}</strong></td>\r\n                    </tr>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Table;","D:\\Documents\\programming\\reactCovid\\corona-tracker\\src\\utils.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":26},{"ruleId":"50","severity":1,"message":"51","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":26},{"ruleId":"50","severity":1,"message":"51","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":26},{"ruleId":"50","severity":1,"message":"54","line":1,"column":28,"nodeType":"52","messageId":"53","endLine":1,"endColumn":36},{"ruleId":"50","severity":1,"message":"55","line":1,"column":37,"nodeType":"52","messageId":"53","endLine":1,"endColumn":46},{"ruleId":"50","severity":1,"message":"51","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":26},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]